var GPIO = require('./build/Release/gpio');

var LED = GPIO.PD0;

var D_port = GPIO.PD25;
var C_port = GPIO.PD26;
var B_port = GPIO.PD23;
var A_port = GPIO.PD21;
var G_port = GPIO.PD19;
var DI_port = GPIO.PD17;
var CLK_port = GPIO.PB2;
var Latch_port = GPIO.PD24;

var status = 0;
GPIO.init();

GPIO.setcfg(LED, GPIO.OUT);

GPIO.setcfg(D_port, GPIO.OUT);
GPIO.setcfg(C_port, GPIO.OUT);
GPIO.setcfg(B_port, GPIO.OUT);
GPIO.setcfg(A_port, GPIO.OUT);
GPIO.setcfg(G_port, GPIO.OUT);
GPIO.setcfg(DI_port, GPIO.OUT);
GPIO.setcfg(CLK_port, GPIO.OUT);
GPIO.setcfg(Latch_port, GPIO.OUT);

var table = [
0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xF9,0x9F,0xD9,0x9B,0xFB,0xDF,0x7B,0xDE,0xFB,0xDF,
0x03,0xC0,0xBF,0xFD,0x87,0xE1,0xB7,0xED,0xB7,0xED,0xBF,0xFD,0x83,0xC1,0xFF,0xFF,

0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xF9,0x9F,0xE9,0x97,0xFB,0xDF,0x7B,0xDE,0xFB,0xDF,
0x03,0xC0,0xBF,0xFD,0x87,0xE1,0xB7,0xED,0xB7,0xED,0xBF,0xFD,0x83,0xC1,0xFF,0xFF,

0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xF9,0x9F,0xD9,0x9B,0xFB,0xDF,0x7B,0xDE,0xFB,0xDF,
0x03,0xC0,0xBF,0xFD,0x87,0xE1,0xB7,0xED,0xB7,0xED,0xBF,0xFD,0x83,0xC1,0xFF,0xFF,

0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xF9,0x9F,0xE9,0x97,0xFB,0xDF,0x7B,0xDE,0xFB,0xDF,
0x03,0xC0,0xBF,0xFD,0x87,0xE1,0xB7,0xED,0xB7,0xED,0xBF,0xFD,0x83,0xC1,0xFF,0xFF,
];

var table2 = [
  0x00,0x02,0x00,0x02,0xf8,0x3f,0x00,0x04,0x40,0x04,0xf0,0x07,0x5c,0x1c,0x44,0x34,
  0x46,0x24,0x82,0x64,0x82,0x44,0x06,0x45,0x04,0x46,0x1c,0x38,0x70,0x00,0x00,0x00,
  
  0x02,0x00,0x02,0x00,0x3f,0xf8,0x04,0x00,0x04,0x40,0x07,0xf0,0x1c,0x5c,0x34,0x44,
  0x24,0x46,0x64,0x82,0x44,0x82,0x45,0x06,0x46,0x04,0x38,0x1c,0x00,0x70,0x00,0x00,
  
  0x02,0x00,0x02,0x00,0x3f,0xf8,0x04,0x00,0x04,0x40,0x07,0xf0,0x1c,0x5c,0x34,0x44,
  0x24,0x46,0x64,0x82,0x44,0x82,0x45,0x06,0x46,0x04,0x38,0x1c,0x00,0x70,0x00,0x00,
  
  0x02,0x00,0x02,0x00,0x3f,0xf8,0x04,0x00,0x04,0x40,0x07,0xf0,0x1c,0x5c,0x34,0x44,
  0x24,0x46,0x64,0x82,0x44,0x82,0x45,0x06,0x46,0x04,0x38,0x1c,0x00,0x70,0x00,0x00,
];

var table3 = [
0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xF9,0x9F,0xD9,0x9B,0xFB,0xDF,0x7B,0xDE,0xFB,0xDF,
0x03,0xC0,0xBF,0xFD,0x87,0xE1,0xB7,0xED,0xB7,0xED,0xBF,0xFD,0x83,0xC1,0xFF,0xFF,

0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xF9,0x9F,0xD9,0x9B,0xFB,0xDF,0x7B,0xDE,0xFB,0xDF,
0x03,0xC0,0xBF,0xFD,0x87,0xE1,0xB7,0xED,0xB7,0xED,0xBF,0xFD,0x83,0xC1,0xFF,0xFF,

0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xF9,0x9F,0xD9,0x9B,0xFB,0xDF,0x7B,0xDE,0xFB,0xDF,
0x03,0xC0,0xBF,0xFD,0x87,0xE1,0xB7,0xED,0xB7,0xED,0xBF,0xFD,0x83,0xC1,0xFF,0xFF,

0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xF9,0x9F,0xD9,0x9B,0xFB,0xDF,0x7B,0xDE,0xFB,0xDF,
0x03,0xC0,0xBF,0xFD,0x87,0xE1,0xB7,0xED,0xB7,0xED,0xBF,0xFD,0x83,0xC1,0xFF,0xFF,

];

// 让led 一闪一闪
/*
var blink = function(){
    if(status){
	GPIO.output(LED, GPIO.LOW);
	status = 0;
    } else {
	GPIO.output(LED, GPIO.HIGH);
	status = 1;
    }
}

setInterval(blink, 1000);
*/
function HC595_Data_Send(daH, daL, han)
{
	var i;
	GPIO.output(Latch_port, GPIO.LOW);
	GPIO.output(CLK_port, GPIO.LOW);
	
	for(i=0;i<8;i++){
		if(((daH)&0x01)!=0) GPIO.output(DI_port, GPIO.HIGH);
		else GPIO.output(DI_port, GPIO.LOW);
		GPIO.output(CLK_port, GPIO.HIGH);
		GPIO.output(CLK_port, GPIO.LOW);
		daH >>= 1;
	}
	for(i=0;i<8;i++){
		if(((daL)&0x01)!=0) GPIO.output(DI_port, GPIO.HIGH);
		else GPIO.output(DI_port, GPIO.LOW);
		GPIO.output(CLK_port, GPIO.HIGH);
		GPIO.output(CLK_port, GPIO.LOW);
		daL >>= 1;
	}
	
	GPIO.output(G_port, GPIO.HIGH);
	
	switch (han){
		case 0: 
			GPIO.output(A_port, GPIO.LOW);
			GPIO.output(B_port, GPIO.LOW);
			GPIO.output(C_port, GPIO.LOW);
			GPIO.output(D_port, GPIO.LOW);
			break;
		case 1:
			GPIO.output(A_port, GPIO.HIGH);
			GPIO.output(B_port, GPIO.LOW);
			GPIO.output(C_port, GPIO.LOW);
			GPIO.output(D_port, GPIO.LOW);
			break;
		case 2:
			GPIO.output(A_port, GPIO.LOW);
			GPIO.output(B_port, GPIO.HIGH);
			GPIO.output(C_port, GPIO.LOW);
			GPIO.output(D_port, GPIO.LOW);
			break;
		case 3:
			GPIO.output(A_port, GPIO.HIGH);
			GPIO.output(B_port, GPIO.HIGH);
			GPIO.output(C_port, GPIO.LOW);
			GPIO.output(D_port, GPIO.LOW);
			break;
		case 4: 
			GPIO.output(A_port, GPIO.LOW);
			GPIO.output(B_port, GPIO.LOW);
			GPIO.output(C_port, GPIO.HIGH);
			GPIO.output(D_port, GPIO.LOW);
			break;
		case 5:
			GPIO.output(A_port, GPIO.HIGH);
			GPIO.output(B_port, GPIO.LOW);
			GPIO.output(C_port, GPIO.HIGH);
			GPIO.output(D_port, GPIO.LOW);
			break;
		case 6:
			GPIO.output(A_port, GPIO.LOW);
			GPIO.output(B_port, GPIO.HIGH);
			GPIO.output(C_port, GPIO.HIGH);
			GPIO.output(D_port, GPIO.LOW);
			break;
		case 7:
			GPIO.output(A_port, GPIO.HIGH);
			GPIO.output(B_port, GPIO.HIGH);
			GPIO.output(C_port, GPIO.HIGH);
			GPIO.output(D_port, GPIO.LOW);
			break;
		case 8:
			GPIO.output(A_port, GPIO.LOW);
			GPIO.output(B_port, GPIO.LOW);
			GPIO.output(C_port, GPIO.LOW);
			GPIO.output(D_port, GPIO.HIGH);
			break;
		case 9: 
			GPIO.output(A_port, GPIO.HIGH);
			GPIO.output(B_port, GPIO.LOW);
			GPIO.output(C_port, GPIO.LOW);
			GPIO.output(D_port, GPIO.HIGH);
			break;
		case 10: 
			GPIO.output(A_port, GPIO.LOW);
			GPIO.output(B_port, GPIO.HIGH);
			GPIO.output(C_port, GPIO.LOW);
			GPIO.output(D_port, GPIO.HIGH);
			break;
		case 11: 
			GPIO.output(A_port, GPIO.HIGH);
			GPIO.output(B_port, GPIO.HIGH);
			GPIO.output(C_port, GPIO.LOW);
			GPIO.output(D_port, GPIO.HIGH);
			break;
		case 12: 
			GPIO.output(A_port, GPIO.LOW);
			GPIO.output(B_port, GPIO.LOW);
			GPIO.output(C_port, GPIO.HIGH);
			GPIO.output(D_port, GPIO.HIGH);
			break;
		case 13: 
			GPIO.output(A_port, GPIO.HIGH);
			GPIO.output(B_port, GPIO.LOW);
			GPIO.output(C_port, GPIO.HIGH);
			GPIO.output(D_port, GPIO.HIGH);
			break;
		case 14: 
			GPIO.output(A_port, GPIO.LOW);
			GPIO.output(B_port, GPIO.HIGH);
			GPIO.output(C_port, GPIO.HIGH);
			GPIO.output(D_port, GPIO.HIGH);
			break;
		case 15: 
			GPIO.output(A_port, GPIO.HIGH);
			GPIO.output(B_port, GPIO.HIGH);
			GPIO.output(C_port, GPIO.HIGH);
			GPIO.output(D_port, GPIO.HIGH);
			break;
		}
	GPIO.output(Latch_port, GPIO.HIGH);
	GPIO.output(G_port, GPIO.LOW);
	GPIO.output(Latch_port, GPIO.LOW);

}

function sleep(sleepTime) {
       for(var start = Date.now(); Date.now() - start <= sleepTime; ) { } 
}


function start(){
	var i;
	var j=0;
	var k=1;
	while(1){
		for(i=0; i<18000; i++){
			var daH = ~table2[(k*16+j)*2+1];
			var daL = ~table2[(k*16+j)*2];
			daH >>= j;
			daL >>= j;
			HC595_Data_Send(daH,daL,j);
			j++;
			if(j==16) j=0;
			//sleep(1);
		}
		//k++;
		//if(k==1) k=0;
	}

}

start();





